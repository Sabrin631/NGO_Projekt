/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo.pkg2.pkg0;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author aliciafermano
 */
public class AvdelningsProjekt extends javax.swing.JFrame {
    private InfDB idb;
    private String anvandareID;

    /**
     * Creates new form AvdelningsProjekt
     */
    public AvdelningsProjekt(InfDB idb, String anvandareID) {
        initComponents();
        this.idb = idb;
        this.anvandareID = anvandareID;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComboBoxVäljStatus = new javax.swing.JComboBox<>();
        btnHämtaProjekt = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaProjekt = new javax.swing.JTextArea();
        lblExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComboBoxVäljStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alla", "Pågående", "Avslutat", "Planerat", " ", " " }));
        getContentPane().add(ComboBoxVäljStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, 137, -1));

        btnHämtaProjekt.setText("Hämta Projekt");
        btnHämtaProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHämtaProjektActionPerformed(evt);
            }
        });
        getContentPane().add(btnHämtaProjekt, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, 137, 51));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 7));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Sök  Projekt På Min Avdelning");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 626, -1));

        TextAreaProjekt.setColumns(20);
        TextAreaProjekt.setRows(5);
        jScrollPane1.setViewportView(TextAreaProjekt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 470, 300));

        lblExit.setText("Exit");
        lblExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblExitActionPerformed(evt);
            }
        });
        getContentPane().add(lblExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 333, 140, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<String[]> hamtaHandlaggare(String sokNamn) {
    ArrayList<String[]> handlaggareLista = new ArrayList<>();
    try {
        // Hämta avdelning för användaren
        String avdelningQuery = "SELECT avdelning FROM anstalld WHERE aid = '" + anvandareID + "'";
        String avdelning = idb.fetchSingle(avdelningQuery);
        System.out.println("Användarens avdelning: " + avdelning);  // Logga avdelningen

        // Kontrollera om avdelningen är null eller tom
        if (avdelning == null || avdelning.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Användaren har inte kopplats till en avdelning.");
            return handlaggareLista;  // Stoppa vidare exekvering
        }

        // SQL-fråga
        String sql = "SELECT aid, fornamn, efternamn " + 
                     "FROM anstalld " + 
                     "JOIN avdelning av ON anstalld.avdelning = av.avdid " + 
                     "WHERE fornamn LIKE '%" + sokNamn + "%' " + 
                     "AND av.namn = '" + avdelning + "'";  // Använd avdelningens namn istället för ID

        // Logga SQL-frågan
        System.out.println("SQL-fråga: " + sql);

        ArrayList<HashMap<String, String>> resultat = idb.fetchRows(sql);

        if (resultat != null) {
            for (HashMap<String, String> rad : resultat) {
                String[] handlaggare = { rad.get("aid"), rad.get("fornamn"), rad.get("efternamn") };
                handlaggareLista.add(handlaggare);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Ett fel uppstod: " + e.getMessage());
    }
    return handlaggareLista;
}
    private void btnHämtaProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHämtaProjektActionPerformed
        // Töm TextArea innan nya resultat visas
    TextAreaProjekt.setText("");

    // Hämta valt status från ComboBox
    String valtStatus = ComboBoxVäljStatus.getSelectedItem().toString();

    try {
        // Hämta avdelning baserat på användarens ID
        String avdelningQuery = "SELECT avdelning FROM Anstalld WHERE aid = '" + anvandareID + "'";
        String avdelning = idb.fetchSingle(avdelningQuery);

        if (avdelning == null) {
            TextAreaProjekt.setText("Ingen avdelning hittades för användaren.");
            return;
        }

        // Skapa SQL-frågan för att hämta projekt baserat på projektchefens avdelning
        String sql = "SELECT projekt.pid, projekt.projektnamn, projekt.beskrivning, projekt.status, " +
             "concat(projektchef.fornamn, ' ', projektchef.efternamn) as projektchef " +
             "FROM projekt " +
             "JOIN anstalld AS projektchef ON projekt.projektchef = projektchef.aid " +
             "JOIN avdelning ON projektchef.avdelning = avdelning.avdid " +
             "WHERE avdelning.avdid = 2";


        // Om status inte är "Alla", lägg till filter för status
        if (!valtStatus.equals("Alla")) {
            sql += " AND projekt.status = '" + valtStatus + "'";
        }

        // Kör SQL-frågan
        ArrayList<HashMap<String, String>> projektLista = idb.fetchRows(sql);

        // Kontrollera om några projekt hittades
        if (projektLista == null || projektLista.isEmpty()) {
            TextAreaProjekt.setText("Inga projekt hittades för avdelningen: " + avdelning + " med status: " + valtStatus);
            return;
        }

        // Bygg upp texten som ska visas i TextArea
        StringBuilder resultat = new StringBuilder();
        for (HashMap<String, String> projekt : projektLista) {
            resultat.append("Projekt ID: ").append(projekt.get("pid")).append("\n");
            resultat.append("Namn: ").append(projekt.get("namn")).append("\n");
            resultat.append("Beskrivning: ").append(projekt.get("beskrivning")).append("\n");
            resultat.append("Status: ").append(projekt.get("status")).append("\n");
            resultat.append("Projektchef: ").append(projekt.get("projektchef")).append("\n");
            resultat.append("----------------------------\n");
        }

        // Visa resultaten i TextArea
        TextAreaProjekt.setText(resultat.toString());
    } catch (InfException e) {
        TextAreaProjekt.setText("Ett fel inträffade vid hämtning av projekt: " + e.getMessage());
    } catch (Exception ex) {
        TextAreaProjekt.setText("Ett oväntat fel inträffade: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnHämtaProjektActionPerformed

    private void lblExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblExitActionPerformed
        int svar = JOptionPane.showConfirmDialog(this, 
        "Är du säker på att du vill gå tillbaka till menyn?", 
        "Bekräfta", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.QUESTION_MESSAGE);
    
    if (svar == JOptionPane.YES_OPTION) {
       
        new HandläggarMeny(idb,anvandareID).setVisible(true);
        this.setVisible(false);
    }
    }//GEN-LAST:event_lblExitActionPerformed
 /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvdelningsProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvdelningsProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvdelningsProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvdelningsProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AvdelningsProjekt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxVäljStatus;
    private javax.swing.JTextArea TextAreaProjekt;
    private javax.swing.JButton btnHämtaProjekt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lblExit;
    // End of variables declaration//GEN-END:variables
}
